% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/km_pooling.R
\name{km_pooling}
\alias{km_pooling}
\title{Pooled Kaplan-Meier estimate and survival curve}
\usage{
km_pooling(
  object = NULL,
  surv_formula = stats::as.formula(survival::Surv(fu_itt_months, death_itt) ~ treat)
)
}
\arguments{
\item{object}{imputed and matched (mimids) or weighted (wimids) object}

\item{surv_formula}{specification of survival model formula to be fitted}
}
\value{
list with pooled median survival estimate and pooled Kaplan-Meier curve
\code{km_median_survival}:
\itemize{
\item strata = stratum
\item t_median = median survival time
\item t_lower = lower 95\% CI of median survival time
\item t_upper = upper 95\% CI of median survival time
}

\code{km_survival_table}:
\itemize{
\item strata = stratum
\item time = observed time point
\item m = number of imputed datasets
\item qbar = pooled univariate estimate of the complementary log-log transformed survival probabilities, see formula (3.1.2) Rubin (1987)
\item t = total variance of the pooled univariate estimate of the complementary log-log transformed survival probabilities, formula (3.1.5) Rubin (1987)
\item se = total standard error of the pooled estimate (derived as sqrt(t))
\item surv = back-transformed pooled survival probability
\item lower = Wald-type lower 95\% confidence interval of back-transformed pooled survival probability
\item upper = Wald-type upper 95\% confidence interval of back-transformed pooled survival probability
}

\code{km_plot}: ggplot2 object with Kaplan-Meier curve
}
\description{
Computes pooled median survival Kaplan-Meier estimates using Rubin's rule
and outputs corresponding Kaplan-Meier curve across imputed and
matched/weighted datasets
}
\details{
The function requires an object of class mimids or wimids, which is the output
of a workflow that requires imputing multiple (m) datasets using mice or amelia
and matching or weighting each imputed dataset via the MatchThem package
(see examples).

The function fits the pre-specified survfit model (\code{surv_formula}, \code{\link[survival]{survfit}} package)
to compute survival probabilities at each individual time point according to the Kaplan-Meier method.
For matched and weighted datasets, weights, cluster membership (matching only) and robust
variance estimates are considered in the \code{\link[survival]{survfit}} call by default.

Since survival probabilities typically don't follow normal distributions,
these need to be transformed to approximate normality first before pooling
across imputed datasets and time points. To that end, survival probabilities are first
transformed using a complementary log-log transformation (\code{log(-log(1-pr(surv)))})
as recommended by multiple sources (Marshall, Billingham, and Bryan (2009)).

To pool the transformed estimates across imputed datasets and time points, the pool.scalar
function is used to apply Rubin's rule to combine pooled estimates (qbar) according to
formula (3.1.2) Rubin (1987) and to compute the corresponding total variance (t) of the pooled
estimate according to formula (3.1.5) Rubin (1987).

The pooled survival probabilities are then back-transformed via \code{1-exp(-exp(qbar))}
for pooled survival probability estimates and \code{1-exp(-exp(qbar +/- 1.96*sqrt(t)))}
for lower and upper 95\% confidence intervals. As the formula indicates, the pooled standard
error is computed as the square root of the total variance. The vertically stacked table
with transformed and backtransformed estimates is returned with the
\code{km_survival_table} table.

Finally, the median survival time is extracted from the \code{km_survival_table} table
by determining the time the survival probability drops below .5 for the first time.
For this a sub-function of Terry M. Therneau's \code{\link[survival]{print.survfit}} function
is used. Therneau also considers some edge cases/nuisances (x = time, y = surv):
\itemize{
\item Nuisance 1: if one of the y's is exactly .5, we want the mean of the corresponding x and the first x for which y<.5. We need to use the equivalent of all.equal to check for a .5 however: survfit(Surv(1:100)~1) gives a value of .5 + 1.1e-16 due to roundoff error.
\item Nuisance 2: there may by an NA in the y's
\item Nuisance 3: if no y's are <=.5, then we should return NA
\item Nuisance 4: the obs (or many) after the .5 may be censored, giving a stretch of values = .5 +- epsilon
}

The function follows the following logic:
\enumerate{
\item Fit Kaplan-Meier survival function to each imputed and matched/weighted dataset
\item Transform survival probabilities using complementary log-log transformation
\item Pool transformed survival probabilities and compute total variance using Rubin's rule
\item Back-transform pooled survival probabilities and compute 95\% confidence intervals
\item Extract median survival time and corresponding 95\% confidence intervals
\item Plot Kaplan-Meier curve with pooled survival probabilities and confidence intervals
}

More references:
\itemize{
\item https://stefvanbuuren.name/fimd/sec-pooling.html
\item https://link.springer.com/article/10.1007/s10198-008-0129-y
\item https://bmcmedresmethodol.biomedcentral.com/articles/10.1186/s12874-015-0048-4
}
}
\examples{
if(require("MatchThem")){

  library(encore.analytics)
  library(mice)
  library(MatchThem)

  # simulate a cohort with 1,000 patients with 20\% missing data
  data <- simulate_data(
    n = 1000,
    imposeNA = TRUE,
    propNA = 0.2
    )

  # impute the data
  set.seed(42)
  mids <- mice(data, m = 5, print = FALSE)

  # fit a propensity score model
  fit <- as.formula(treat ~ dem_age_index_cont + dem_sex_cont + c_smoking_history)

  # weight (or alternatively match) patients within each imputed dataset
  wimids <- weightthem(
    formula = fit,
    datasets = mids,
    approach = "within",
    method = "glm",
    estimand = "ATO"
    )

  # fit a survival model
  km_fit <- as.formula(survival::Surv(fu_itt_months, death_itt) ~ treat)

  # estimate and pool median survival times and Kaplan-Meier curve
  km_out <- km_pooling(
    object = wimids,
    surv_formula = km_fit
    )

  # median survival time
  km_out$km_median_survival

  # KM curve
  km_out$km_plot

}

}
\seealso{
\code{\link[survival]{survfit}} \code{\link[mice]{pool.scalar}} \code{\link[MatchThem]{matchthem}} \code{\link[MatchThem]{weightthem}}
}
